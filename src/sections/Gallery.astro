---
import PortableText from "@/components/atoms/PortableText.astro";
import PortableTextTitle from "@/components/atoms/PortableTextTitle.astro";
import Container from "@/components/global/Container.astro";
import { Image } from "astro:assets";
import patternImage from "@assets/pattern-big.png";
import { urlForImage } from "@/sanity/lib/urlForImage";
import LightboxImage from "@atoms/LightboxImage.jsx";

const { section } = Astro.props;
const { tagline, title, variation, description, galleries, videoHighligths } =
    section;
---

<section
    class:list={[
        "py-14 lg:py-28 relative",
        variation === "white" && "bg-white",
        variation === "dark" && "bg-dark-2",
    ]}
>
    <Image
        src={patternImage}
        alt=""
        class:list={[
            "absolute top-0 left-0 w-full h-full object-cover object-center z-0",

            variation === "gradient" && "opacity-80 ",
            variation === "dark" && "opacity-50 invert",
        ]}
    />
    <Container classes="relative z-10">
        <div class="text-center max-w-[800px] mx-auto mb-14">
            <span
                class:list={[
                    "uppercase font-medium text-indigo mb-1",
                    variation === "dark" && "text-yellow",
                ]}>{tagline}</span
            >
            <h2
                class:list={[
                    "mb-4 [&>strong]:font-bold",
                    variation !== "dark" && "[&>strong]:text-indigo",
                    variation === "dark" && "[&>strong]:text-yellow",
                ]}
            >
                <PortableTextTitle portableText={title} />
            </h2>
            <div><PortableText portableText={description} /></div>
        </div>

        {
            galleries &&
                galleries.map((gallery, index) => {
                    console.log(gallery.images);
                    return (
                        <div class="mb-20">
                            <div
                                class:list={[
                                    "rounded-sm text-display-lg font-display font-semibold mb-6 py-8 px-8",
                                    variation === "white" && index % 2 === 0
                                        ? "bg-indigo text-white"
                                        : "bg-lavander text-indigo",
                                ]}
                            >
                                <PortableText portableText={gallery.title} />
                            </div>
                            <div class="grid sm:grid-cols-2 xl:grid-cols-4 gap-4  ">
                                {gallery.images.map((image) => {
                                    return (
                                        <div class="min-h-64">
                                            <LightboxImage
                                                client:load
                                                images={gallery.images}
                                                imageUrl={urlForImage(
                                                    image,
                                                ).url()}
                                            />
                                        </div>
                                    );
                                })}
                            </div>
                        </div>
                    );
                })
        }

        {videoHighligths && <div>Video Highlights</div>}
    </Container>
</section>
