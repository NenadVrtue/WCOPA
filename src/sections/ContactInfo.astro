---
import PortableText from "@/components/atoms/PortableText.astro";
import PortableTextTitle from "@/components/atoms/PortableTextTitle.astro";
import Container from "@/components/global/Container.astro";
import InfoCardType1 from "@/components/molecules/InfoCardType1.astro";
import InfoCardType2 from "@/components/molecules/InfoCardType2.astro";
import { Image } from "astro:assets";
import patternImage from "@assets/pattern-alt.png";
const { section } = Astro.props;
const { title, description, cards, ctaText, variation } = section;
---

<section
    class:list={[
        "py-14 lg:py-24",
        variation === "white " && "bg-white text-dark-2",
        variation === "offwhite" && "bg-offwhite text-dark-2",
        variation === "lavander" && "bg-lavander text-dark-2",
        variation === "gradient" &&
            "bg-gradient-to-b from-white from-[28%] to-lavander to-[100%] text-dark-2",
        variation === "dark" && "bg-dark-2 relative text-white",
        variation === "image" && "relative text-white",
        variation === "pattern" && "relative bg-offwhite",
    ]}
>
    <Image
        src={patternImage}
        alt=""
        class:list={[
            "",
            variation !== "pattern" && "hidden",
            variation === "pattern" &&
                "absolute top-0 left-0 w-full h-full object-cover object-center z-0",
        ]}
    />
    <Container classes="relative z-10">
        <div class="text-center max-w-[800px] mx-auto">
            <h2
                class:list={[
                    "mb-6 [&>strong]:font-bold",
                    variation !== "dark" && "[&>strong]:text-indigo",
                    variation === "dark" &&
                        " text-white  [&>strong]:text-yellow",
                ]}
            >
                <PortableTextTitle portableText={title} />
            </h2>
            <div
                class:list={[
                    "text-md mb-8 [&>h3]:mb-4 [&>h3]:text-xl [&>h3]:font-medium   ",
                ]}
            >
                <PortableText portableText={description} />
            </div>
        </div>

        {
            cards && (
                <div
                    class:list={[
                        " grid md:grid-cols-2  gap-8",
                        cards.length < 2 &&
                            "grid-cols-1 md:grid-cols-1 max-w-[800px]",
                        cards.length > 2 && "lg:grid-cols-3",
                    ]}
                >
                    {cards.map((card) => {
                        switch (card.cardType) {
                            case "type1":
                                return (
                                    <InfoCardType1
                                        card={card}
                                        cardVariation={variation}
                                    />
                                );
                            case "type2":
                                return (
                                    <InfoCardType2
                                        card={card}
                                        cardVariation={variation}
                                    />
                                );
                            // Add other cases here as needed
                            default:
                                return <div />;
                        }
                    })}
                </div>
            )
        }

        {
            ctaText && (
                <div class="max-w-[800px] mt-10 mx-auto text-md font-semibold text-center">
                    <PortableText portableText={ctaText} />
                </div>
            )
        }
    </Container>
</section>
